{{!-- new post button and card --}}
<div class="container new-post-container">
  <a href="#" id="new-post-btn" class="btn btn-primary" style="margin-bottom: 20px;">+ New Post</a>
  <div id="new-post-form" style="display: none;" class="card login-card">
    <div class="card-header">
      <h2>New Post</h2>
    </div>
    <div class="card-body">
      <form id="create-post-form" class="form login-form">
        <div class="form-group">
          <label for="title">Title:</label>
          <input type="text" id="title" name="title" required>
        </div>
        <div class="form-group">
          <label for="content">Content:</label>
          <textarea id="new-post-content" class="w-full p-2.5" name="content" rows="5" required></textarea>
        </div>
        <button type="submit" class="btn btn-success">Submit</button>
      </form>
    </div>
  </div>
</div>

{{!-- display logged in users posts --}}
{{#if userPosts}}
  <h2 class="your-posts ms-10">Your Posts:</h2>
{{/if}}
{{#each userPosts}}
  <div class="card">
    <div class="card-header">
      <h2>{{this.title}}</h2>
      <span>Posted by {{this.author}} on {{formatDate this.createdAt}}</span>
    </div>
    <div class="card-body">
      <p>{{this.content}}</p>
    </div>
    <hr>
    <div class="card-footer flex justify-end gap-4 mx-3.5">
      <!-- Add link/button for viewing post details -->
      <a href="/post/{{this.id}}" class="btn btn-primary view-post-btn italic">View</a>
      <!-- Edit button within the form -->
      <form id="edit-form-{{this.id}}" action="/post/{{this.id}}/edit" method="GET" class="edit-form">
      <button type="submit" class="btn btn-warning edit-btn italic">Edit</button>
      </form>

      <!-- Delete button within the form -->
      <form id="delete-form-{{this.id}}" action="/api/posts/{{this.id}}" method="DELETE" class="delete-form">
        <button type="button" class="btn btn-danger delete-btn italic" onclick="deletePost('{{this.id}}')">Delete</button>
      </form>
    </div>
  </div>
{{/each}}

<!-- Edit form for individual posts -->
<div class="card" id="edit-form-{{this.id}}" style="">
  <div class="card-header">
    <h2>Edit Post</h2>
  </div>
  <div class="card-body">
    <form id="edit-post-form" action="/post/{{this.id}}/edit" method="POST">
      <div class="form-group">
        <label for="edit-title">Edit Title:</label>
        <input type="text" id="edit-title" name="edit-title" class="w-full p-2.5" value="{{this.title}}" required>
      </div>
      <div class="form-group">
        <label for="edit-content">Edit Content:</label>
        <textarea id="edit-content" name="edit-content" class="w-full p-2.5" rows="5" required>{{this.content}}</textarea>
      </div>
      <div class="button-container mt-5">
        <button type="submit" class="btn btn-success save-btn w-full text-white">Save Changes</button>
      </div>
    </form>
  </div>
</div>

{{!-- script to show the new-post-form when the new-post-btn is clicked MOVE TO JS FOLDER --}}
<script>
  document.getElementById('new-post-btn').addEventListener('click', () => {
    const form = document.getElementById('new-post-form');
    if (form.style.display === 'none' || form.style.display === '') {
      form.style.display = 'block';
    } else {
      form.style.display = 'none';
    }
  });
</script>

{{!-- script to handle the createPostFormHandler MOVE TO JS FOLDER --}}
<script>
  document.getElementById('create-post-form').addEventListener('submit', async (event) => {
    event.preventDefault();

    const title = document.getElementById('title').value.trim();
    const content = document.getElementById('new-post-content').value.trim();

    if (title && content) {
      const response = await fetch('/api/posts', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
        },
        body: JSON.stringify({ title, content }),
      });

      if (response.ok) {
        document.location.reload(); // Reload the page after successful submission
      } else {
        alert('Failed to create post');
      }
    } else {
      alert('Please fill in all fields');
    }
  });
</script>

{{!-- deletePost function to be moved MOVE TO JS FOLDER --}}
<script>
  function deletePost(postId) {
  if (confirm("Are you sure you want to delete this post?")) {
    // Send a DELETE request using fetch API
    fetch(`/api/posts/${postId}`, {
      method: "DELETE",
      headers: {
        "Content-Type": "application/json",
      },
      body: JSON.stringify({ postId: postId }),
    })
      .then((response) => {
        if (!response.ok) {
          throw new Error("Failed to delete post");
        }
        return response.json();
      })
      .then((data) => {
        // Post deleted successfully, you can handle the UI update here
        console.log("Post deleted successfully");
        // For example, you can remove the card from the UI
        document.getElementById(`delete-form-${postId}`).parentElement.parentElement.remove();
      })
      .catch((error) => {
        console.error("Error:", error);
        alert("Failed to delete post");
      });
  }
}

</script>

